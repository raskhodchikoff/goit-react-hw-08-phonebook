{"version":3,"file":"static/js/310.671d8ccf.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelector.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Phonebook/Phonebook.styled.jsx","pages/Phonebook/Phonebook.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Label = styled.label`\n  font-weight: ${p => p.theme.fontWeights[4]};\n  font-size: ${p => p.theme.fontSizes[1]}px;\n  color: orange;\n\n  p {\n    font-weight: ${p => p.theme.fontWeights[6]};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    color: ${p => p.theme.colors.greyBorder};\n  }\n`;\n\nexport const FormBox = styled(Form)`\n  max-width: 230px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: ${p => p.theme.space[4]}px;\n  border: ${p => `${p.theme.borders.m} ${p.theme.colors.greyBorder}`};\n  border-radius: ${p => p.theme.radii.m};\n  box-shadow: ${p => p.theme.shadows.shadow};\n`;\n\nexport const Input = styled(Field)`\n  width: 160px;\n  border: ${p => `${p.theme.borders.m} ${p.theme.colors.greyBorder}`};\n  border-radius: ${p => p.theme.radii.s};\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  gap: ${p => p.theme.space[2]}px;\n  margin-top: ${p => p.theme.space[3]}px;\n  padding: 3px;\n  border: ${p => `${p.theme.borders.m} ${p.theme.colors.greyBorder}`};\n  border-radius: ${p => p.theme.radii.s};\n  box-shadow: ${p => p.theme.shadows.shadow};\n\n  :hover {\n    background-color: ${p => p.theme.colors.btnHover};\n    color: ${p => p.theme.colors.blackFont};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelector';\nimport { addContact } from 'redux/contacts/contactOperations';\n\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { Button, Label, FormBox, Input } from './ContactForm.styled';\n\nconst nameRegex = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst phoneRegex =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegex,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Please enter first and last name'),\n  number: yup\n    .string()\n    .min(7)\n    .max(14)\n    .matches(\n      phoneRegex,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Please enter the phone number'),\n});\n\nconst initialValues = { name: '', number: '' };\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = ({ name, number }, actions) => {\n    const data = {\n      name,\n      number,\n    };\n\n    contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n      ? Notify.warning(`${name} is already in contacts.`, {\n          timeout: 2000,\n          position: 'center-top',\n          fontSize: '20px',\n          width: '400px',\n          clickToClose: true,\n        })\n      : dispatch(addContact(data)) && actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={formSubmitHandler}\n      validationSchema={schema}\n    >\n      <FormBox autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          <p>Name</p>\n          <Input type=\"text\" name=\"name\" placeholder=\"Enter name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          <p>Number</p>\n          <Input type=\"tel\" name=\"number\" placeholder=\"Enter phone number\" />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormBox>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 64px;\n  padding-right: 64px;\n  padding-bottom: 48px;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n    padding-bottom: 0px;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 3px;\n  border: ${p => `${p.theme.borders.m} ${p.theme.colors.greyBorder}`};\n  border-radius: ${p => p.theme.radii.s};\n  box-shadow: ${p => p.theme.shadows.shadow};\n\n  :hover {\n    background-color: ${p => p.theme.colors.btnHover};\n    color: ${p => p.theme.colors.blackFont};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/contactsSelector';\nimport { deleteContact } from 'redux/contacts/contactOperations';\n\nimport { Button, ListItem } from './ContactList.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter).toLowerCase();\n\n  const filteringContact = () =>\n    contacts.filter(contact => contact.name.toLowerCase().includes(filter));\n  const filteredContacts = filteringContact();\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <ListItem key={id}>\n            {name}: {number}\n            <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </Button>\n          </ListItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes[2]}px;\n  color: ${p => p.theme.colors.greyBorder};\n\n  input {\n    width: 160px;\n    border: ${p => `${p.theme.borders.m} ${p.theme.colors.greyBorder}`};\n    border-radius: ${p => p.theme.radii.s};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/contactsSelector';\nimport { setFilter } from 'redux/contacts/contactsSlice';\n\nimport { Label } from 'components/Filter/Filter.styled';\nimport { Box } from './../Box';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <Box as=\"div\" px={5}>\n      <Label htmlFor=\"text\">\n        <span>Find contacts by name</span>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={onFilter}\n          autoComplete=\"off\"\n        />\n      </Label>\n    </Box>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  text-align: center;\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.blackFont};\n  font-size: ${p => p.theme.fontSizes[3]}px;\n`;\n\nexport const ContactsTitle = styled.h2`\n  text-align: center;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.blackFont};\n  font-size: ${p => p.theme.fontSizes[5]}px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactOperations';\nimport { selectIsLoading, selectError } from 'redux/contacts/contactsSelector';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport { MainTitle, ContactsTitle } from './Phonebook.styled';\nimport { Box } from './../../components/Box';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      as=\"div\"\n      mx=\"auto\"\n      width=\"400px\"\n      mt={5}\n      // py={5}\n      bg=\"mainBgr\"\n      border=\"m\"\n      borderRadius=\"m\"\n      borderColor=\"greyBorder\"\n      boxShadow=\"shadow\"\n    >\n      <Box as=\"section\" mb={3}>\n        <MainTitle>Add a contact</MainTitle>\n        <ContactForm />\n      </Box>\n      <Box as=\"section\">\n        <ContactsTitle>Contacts</ContactsTitle>\n        <Filter />\n        {isLoading && !error && <b>Your request is being processed...</b>}\n        {error && <p> {error} </p>}\n        <ContactList />\n      </Box>\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","Label","styled","p","theme","fontWeights","fontSizes","colors","greyBorder","FormBox","Form","space","borders","m","radii","shadows","shadow","Input","Field","s","Button","btnHover","blackFont","schema","yup","shape","name","matches","required","number","min","max","initialValues","useSelector","dispatch","useDispatch","onSubmit","actions","data","find","contact","toLowerCase","Notify","timeout","position","fontSize","width","clickToClose","addContact","resetForm","validationSchema","autoComplete","htmlFor","type","placeholder","component","ListItem","filteredContacts","includes","map","id","onClick","deleteContact","Box","as","px","value","onChange","e","setFilter","currentTarget","MainTitle","ContactsTitle","ContactsPage","useEffect","fetchContacts","mx","mt","bg","border","borderRadius","borderColor","boxShadow","mb","ContactList"],"sourceRoot":""}